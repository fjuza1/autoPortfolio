[1mdiff --git a/src/js/Views/DesignView.js b/src/js/Views/DesignView.js[m
[1mindex e875072..5500b1b 100644[m
[1m--- a/src/js/Views/DesignView.js[m
[1m+++ b/src/js/Views/DesignView.js[m
[36m@@ -19,7 +19,7 @@[m [mclass Design extends View {[m
 		!entry.isIntersecting ? this._navBar.classList.add('sticky-top') : this._navBar.classList.remove('sticky-top');[m
 	}[m
 	scrollIntoSection(e) {[m
[31m-		const targetSectionId = e.target.closest('.nav-link').textContent.trim();[m
[32m+[m		[32mconst targetSectionId = e.target.closest('.nav-link')?.textContent.trim();[m
 		if (!targetSectionId) return[m
 		const targetSection = document.getElementById(targetSectionId).getBoundingClientRect();[m
 		const navHeight = document.querySelector('.nav').offsetHeight;[m
[1mdiff --git a/src/js/Views/skillsView.js b/src/js/Views/skillsView.js[m
[1mindex 965a495..6743113 100644[m
[1m--- a/src/js/Views/skillsView.js[m
[1m+++ b/src/js/Views/skillsView.js[m
[36m@@ -87,6 +87,5 @@[m [mclass SkillsView extends View {[m
 	addSortHandler(handler) {[m
 		this._sortFilter.addEventListener('change', handler);[m
 	}[m
[31m-[m
 }[m
 export default new SkillsView();[m
\ No newline at end of file[m
[1mdiff --git a/src/js/controller.js b/src/js/controller.js[m
[1mindex f3e3954..9b11054 100644[m
[1m--- a/src/js/controller.js[m
[1m+++ b/src/js/controller.js[m
[36m@@ -4,6 +4,7 @@[m [mimport {async} from 'regenerator-runtime';[m
 import * as model from './model.js';[m
 import design from './Views/DesignView.js';[m
 import skillsView from './Views/skillsView.js';[m
[32m+[m[32mconsole.log("ðŸš€ ~ skillsView:", skillsView)[m
 const controllNavBar = () => {[m
    design.addHandlerHover(design.handleHover)[m
    design.addHandlerNavObserver()[m
